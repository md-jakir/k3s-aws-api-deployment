---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
  - ../../aws-infra/terraform_outputs.json

  vars:
    key_name: ec2_key          
    region: ap-south-1   
    image: ami-0c2af51e265bd5e0e
    id: "k3s cluster"
    instance_type: t2.medium
    #vpc_id: vpc_id.value
    #subnet_id: subnet-0415157a893fe40ef
    sec_group: "k3s-security-group"
    #ec2_access_key: 
    #ec2_secret_key: 

  tasks:
    - name: Create security group
      ansible.builtin.ec2_group:
        name: "{{ sec_group }}"
        vpc_id: "{{ vpc_id.value }}"
        description: "Sec group for app"
        region: "{{ region }}"
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        rules:                               
          - proto: tcp
            ports:
            - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on ssh port

    - name: Create Key Pair   
      ansible.builtin.ec2_key:
        name: "{{ key_name }}"
        region: "{{ region }}"
        aws_access_key: "{{ ec2_access_key }}"  
        aws_secret_key: "{{ ec2_secret_key }}" 
        key_material: "{{ lookup('file', '~/.ssh/aws_ec2_key.pub') }}"

    - name: Start server instance
      ansible.builtin.ec2_instance:
        key_name: "{{ key_name }}"
        vpc_subnet_id: "{{ private_subnet_id.value }}"
        instance_type: "{{ instance_type }}"
        security_group: "{{ sec_group }}"
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        region: "{{ region }}"
        network:
          assign_public_ip: true
        image_id: "{{ image }}"
        tags:
          Name: "master_instance"
      register: server_instance

    - name: Start agent instances
      ansible.builtin.ec2_instance:
        key_name: "{{ key_name }}"
        vpc_subnet_id: "{{ private_subnet_id.value }}"
        instance_type: "{{ instance_type }}"
        security_group: "{{ sec_group }}"
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        region: "{{ region }}"
        network:
          assign_public_ip: true
        image_id: "{{ image }}"
        count: 2
        tags:
          Name: "agent_node"
      register: agent_instances

    - name: Get instance facts
      amazon.aws.ec2_instance_info:
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        region: "{{ region }}"
      register: result

    - name: Display Server Instance ID
      debug:
        msg: "Server Instance ID: {{ server_instance.instances.id }}"

    - name: Display Agent Instance IDs
      debug:
        msg: "Agent Instance ID: {{ item.id }}"
      loop: "{{ agent_instances.instances }}"
      tags: always